.TH GLIIM 2gg $VERSION $DATE Development Tools
.SH NAME
stat-file \-  (files)
.SH PURPOSE
Get information about a file.

.SH SYNTAX

.RS 4
.EX

stat-file <file> \\
    size | type | path | name \\
    to <variable>

.EE
.RE

.SH DESCRIPTION
stat-file obtains information about <file>, which is either the full path of a file or directory, or a name relative to the application home directory (see \fBdirectories\fP). 

Clause "size" will store file's size in bytes to number <variable>, or it will be GG_ERR_FAILED (if operation failed, likely because file does not exist or you have no permissions to access it). 

Clause "type" will store file's type to number <variable>, and it can be either GG_FILE (if it's a file) or GG_DIR (if it's a directory) or GG_ERR_FAILED (if operation failed, likely because file does not exist or you have no permissions to access it). 

Clause "path" (in string <variable>) obtains the fully resolved path of the <file> (including symbolic links), and "name" is the name (a basename, without the path). If path cannot be resolved, then <variable> is an empty string.

.SH EXAMPLES
To get file size in variable "sz", which is created here:

.RS 4
.EX

stat-file "/home/user/file" size to sz

.EE
.RE

To determine if the object is a file or a directory:

.RS 4
.EX

stat-file "/home/user/some_name" type to what
if-true what equal GG_FILE
   @It's a file!
else-if what equal GG_DIR
   @It's a directory!
else-if
   @Doesn't exist!
end-if

.EE
.RE

Get the fully resolved path of a file to string variable "fp", which is created here.

.RS 4
.EX

stat-file "../file" path to fp 

.EE
.RE

.SH SEE ALSO
 
.B - Files

\fBclose-file\fP  
\fBcopy-file\fP  
\fBdelete-file\fP  
\fBfile-position\fP  
\fBfile-storage\fP  
\fBfile-uploading\fP  
\fBlock-file\fP  
\fBopen-file\fP  
\fBread-file\fP  
\fBread-line\fP  
\fBrename-file\fP  
\fBstat-file\fP  
\fBtemporary-file\fP  
\fBuniq-file\fP  
\fBunlock-file\fP  
\fBwrite-file\fP   
See all 
\fBdocumentation\fP
