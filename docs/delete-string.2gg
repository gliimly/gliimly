.TH GLIIM 2gg $VERSION $DATE Development Tools
.SH NAME
delete-string \-  (strings)
.SH PURPOSE
Free string memory.

.SH SYNTAX

.RS 4
.EX

delete-string <string> 

.EE
.RE

.SH DESCRIPTION
delete-string frees <string> variable previously allocated by a Gliimly statement. 

Note that freeing memory is in most cases unnecessary as Gliimly will automatically do so at the end of each request. You should have a good reason for using delete-string otherwise.

Gliimly keeps count of <string> references. So if <string> is referenced by other Gliimly statements (for instance it was assigned to another string variable in \fBset-string\fP, or was used in statements like \fBwrite-index\fP or \fBwrite-array\fP), then <string> may not be deleted; in such a case, unless string was declared to be of process-scope and still used in such statements, it will be deleted when the \fBrequest\fP ends. Otherwise, <string> becomes an empty string ("") after it was deleted.

.SH EXAMPLES
Allocate and free random string:

.RS 4
.EX

random-string to ran_str
\[char46]..
delete-string ran_str

.EE
.RE

Free string allocated by write-string (consisting of 100 "Hello World"s):

.RS 4
.EX

write-string ws
    start-loop repeat 100
        @Hello World
    end-loop
end-write-string
\[char46]..
delete-string ws 

.EE
.RE

.SH SEE ALSO
 
.B - Strings

\fBcopy-string\fP  
\fBcount-substring\fP  
\fBdelete-string\fP  
\fBlower-string\fP  
\fBread-split\fP  
\fBreplace-string\fP  
\fBset-string\fP  
\fBsplit-string\fP  
\fBstring-length\fP  
\fBtrim-string\fP  
\fBupper-string\fP  
\fBwrite-string\fP   
See all 
\fBdocumentation\fP
